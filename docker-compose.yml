version: '3'
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    hostname: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - warehouse_net
    logging:
      driver: none

  database1:
    container_name: database1
    image: postgres:12.3-alpine
    env_file:
      - configurations/postgresql.env
    command:
      - -c
      - max_connections=1024
    networks:
      - warehouse_net
    volumes:
      - postgres_data_one:/var/lib/postgresql/data
    ports:
      - "61833:5432/tcp"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supplywatch"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: none

  database2:
    container_name: database2
    image: postgres:12.3-alpine
    env_file:
      - configurations/postgresql.env
    command:
      - -c
      - max_connections=1024
    networks:
      - warehouse_net
    volumes:
      - postgres_data_two:/var/lib/postgresql/data
    ports:
      - "61832:5432/tcp"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supplywatch"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: none

  monitor:
    container_name: 'monitor'
    hostname: 'monitor'
    build:
      context: .
      dockerfile: ./build/monitor/Dockerfile
      args:
        project: ./cmd/monitor/
    ports:
      - 9000:9000
    networks:
      - warehouse_net
    logging:
      driver: none

  warehouse1:
    container_name: warehouse1
    hostname: warehouse1
    build:
      context: .
      dockerfile: ./build/warehouse/Dockerfile
      args:
        project: ./cmd/warehouse/
    ports:
      - "8000:8000/tcp"
    env_file:
      - configurations/warehouse.env
    environment:
      SW_OTHER_WAREHOUSE_HOST: warehouse2
      SW_OTHER_WAREHOUSE_PORT: 6666
    networks:
      - warehouse_net
    volumes:
      - /var/supplywatch/log:/var/supplywatch/log

  warehouse2:
    container_name: warehouse2
    hostname: warehouse2
    build:
      context: .
      dockerfile: ./build/warehouse/Dockerfile
      args:
        project: ./cmd/warehouse/
    ports:
      - "8001:8000/tcp"
    env_file:
      - configurations/warehouse.env
    environment:
      SW_OTHER_WAREHOUSE_HOST: warehouse1
      SW_OTHER_WAREHOUSE_PORT: 6666
    networks:
      - warehouse_net
    volumes:
      - /var/supplywatch/log:/var/supplywatch/log

  sensor:
    #container_name: sensor
    #:whostname: sensor
    build:
      context: .
      dockerfile: ./build/sensor/Dockerfile
      args:
        project: ./cmd/sensor/
    environment:
      - APP_NAME=sensor
    networks:
      - warehouse_net
    logging:
      driver: none
        #sensor2:
        #container_name: sensor2
        #hostname: sensor2
        #build:
        #context: .
        #dockerfile: ./build/sensor/Dockerfile
        #args:
        #project: ./cmd/sensor/
        #environment:
        #- APP_NAME=sensor
        #networks:
        #- warehouse_net
        #logging:
        #driver: none
        #sensor3:
        #container_name: sensor3
        #hostname: sensor3
        #build:
        #context: .
        #dockerfile: ./build/sensor/Dockerfile
        #args:
        #project: ./cmd/sensor/
        #environment:
        #- APP_NAME=sensor
        #networks:
        #- warehouse_net
        #logging:
        #driver: none

networks:
  warehouse_net:
    driver: bridge

volumes:
  postgres_data_one:
  postgres_data_two:
